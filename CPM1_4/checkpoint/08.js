/**
 * Autor: Jamer Jos√© Rebolledo Quiroz
 * Github: https://github.com/jamerrq
 * Linkedin: https://linkedin.com/in/jamerrq
 */

const { LinkedList } = require("../DS");
/* ‚ö†Ô∏è NO MODIFICAR NADA POR ENCIMA DE ESTA L√çNEA ‚ö†Ô∏è

8Ô∏è‚É£ ***** EJERCICIO 8 ***** - generarLista() 8Ô∏è‚É£

Como las listas nos est√°n siendo √∫tiles para organizar nuestras pel√≠culas, vamos
a pedirte que crees un nuevo m√©todo en el prototipo de "LinkedList" para que
podamos generarlas m√°s r√°pido. El m√©todo "generarLista" recibir√° por par√°metro
el n√∫mero de la cantidad de nodos (longitud) que tiene que tener la lista.


‚õîÔ∏è IMPORTANTE ‚õîÔ∏è
1) Cada n√∫mero en la lista debe incrementarse +1 respecto al anterior comenzando
   desde el 1.
2) Debes retornar una LinkedList con la misma longitud que recibes por
   par√°metro.


üìù EJEMPLO üìù INPUT ---> 4 OUTPUT --> Head ‚û° (1) ‚û° (2) ‚û° (3) ‚û° (4)
*/
LinkedList.prototype.generarLista = function (longitud, i = 1) {
    // Tu c√≥digo aqu√≠:
    while (i <= longitud) this.add(i), i++;
};

/*‚ö†Ô∏è NO MODIFICAR NADA DEBAJO DE ESTA LINEA ‚ö†Ô∏è*/
module.exports = LinkedList;
